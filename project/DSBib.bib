
@article{shafiei_serverless_2022,
	title = {Serverless {Computing}: {A} {Survey} of {Opportunities}, {Challenges}, and {Applications}},
	volume = {54},
	issn = {0360-0300, 1557-7341},
	shorttitle = {Serverless {Computing}},
	url = {https://dl.acm.org/doi/10.1145/3510611},
	doi = {10.1145/3510611},
	abstract = {The emerging serverless computing paradigm has attracted attention from both academia and industry. This paradigm brings benefits such as less operational complexity, a pay-as-you-go pricing model, and an auto-scaling feature. The paradigm opens up new opportunities and challenges for cloud application developers. In this article, we present a comprehensive overview of the past development as well as the recent advances in research areas related to serverless computing. First, we survey serverless applications introduced in the literature. We categorize applications in eight domains and separately discuss the objectives and the viability of the serverless paradigm along with challenges in each of those domains. We then classify those challenges into nine topics and survey the proposed solutions. Finally, we present the areas that need further attention from the research community and identify open problems.},
	language = {en},
	number = {11s},
	journal = {ACM Computing Surveys},
	author = {Shafiei, Hossein and Khonsari, Ahmad and Mousavi, Payam},
	month = jan,
	year = {2022},
	pages = {1--32},
	file = {PDF:/home/nick/Zotero/storage/ZSJUPEQZ/Shafiei et al. - 2022 - Serverless Computing A Survey of Opportunities, Challenges, and Applications.pdf:application/pdf},
}

@article{li_serverless_2022,
	title = {The {Serverless} {Computing} {Survey}: {A} {Technical} {Primer} for {Design} {Architecture}},
	volume = {54},
	issn = {0360-0300, 1557-7341},
	shorttitle = {The {Serverless} {Computing} {Survey}},
	url = {http://arxiv.org/abs/2112.12921},
	doi = {10.1145/3508360},
	abstract = {Note: This paper has been accepted by ACM Computing Surveys (CSUR), and the current e-print version is our major revision. For a complete view, please visit ACM CSUR. CCS Concepts: • Computer systems organization → Cloud computing; n-tier architectures; • Networks → Cloud computing; • Theory of computation → Parallel computing models.},
	language = {en},
	number = {10s},
	journal = {ACM Computing Surveys},
	author = {Li, Zijun and Guo, Linsong and Cheng, Jiagan and Chen, Quan and He, Bingsheng and Guo, Minyi},
	month = jan,
	year = {2022},
	note = {arXiv:2112.12921 [cs]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	pages = {1--34},
	annote = {Comment: This paper has been accepted by ACM Computing Surveys (CSUR), and the current e-print version is our major revision. For a complete view, please visit ACM CSUR},
	file = {PDF:/home/nick/Zotero/storage/KDGHMTKD/Li et al. - 2022 - The Serverless Computing Survey A Technical Primer for Design Architecture.pdf:application/pdf},
}

@article{schleier-smith_what_2021,
	title = {What serverless computing is and should become: the next phase of cloud computing},
	volume = {64},
	issn = {0001-0782, 1557-7317},
	shorttitle = {What serverless computing is and should become},
	url = {https://dl.acm.org/doi/10.1145/3406011},
	doi = {10.1145/3406011},
	abstract = {The evolution that serverless computing represents, the economic forces that shape it, why it could fail, and how it might fulfill its potential.},
	language = {en},
	number = {5},
	journal = {Communications of the ACM},
	author = {Schleier-Smith, Johann and Sreekanti, Vikram and Khandelwal, Anurag and Carreira, Joao and Yadwadkar, Neeraja J. and Popa, Raluca Ada and Gonzalez, Joseph E. and Stoica, Ion and Patterson, David A.},
	month = may,
	year = {2021},
	pages = {76--84},
	file = {PDF:/home/nick/Zotero/storage/FGJAXCXZ/Schleier-Smith et al. - 2021 - What serverless computing is and should become the next phase of cloud computing.pdf:application/pdf},
}

@article{hassan_survey_2021,
	title = {Survey on serverless computing},
	volume = {10},
	issn = {2192-113X},
	url = {https://doi.org/10.1186/s13677-021-00253-7},
	doi = {10.1186/s13677-021-00253-7},
	abstract = {Serverless computing has gained importance over the last decade as an exciting new field, owing to its large influence in reducing costs, decreasing latency, improving scalability, and eliminating server-side management, to name a few. However, to date there is a lack of in-depth survey that would help developers and researchers better understand the significance of serverless computing in different contexts. Thus, it is essential to present research evidence that has been published in this area. In this systematic survey, 275 research papers that examined serverless computing from well-known literature databases were extensively reviewed to extract useful data. Then, the obtained data were analyzed to answer several research questions regarding state-of-the-art contributions of serverless computing, its concepts, its platforms, its usage, etc. We moreover discuss the challenges that serverless computing faces nowadays and how future research could enable its implementation and usage.},
	number = {1},
	journal = {Journal of Cloud Computing},
	author = {Hassan, Hassan B. and Barakat, Saman A. and Sarhan, Qusay I.},
	month = jul,
	year = {2021},
	keywords = {Cloud computing, Serverless benefits, Serverless challenges, Serverless computing, Serverless platforms, Survey},
	pages = {39},
	file = {Full Text PDF:/home/nick/Zotero/storage/LFSC28S2/Hassan et al. - 2021 - Survey on serverless computing.pdf:application/pdf;Snapshot:/home/nick/Zotero/storage/APWQ9PLU/s13677-021-00253-7.html:text/html},
}

@article{castro_rise_2019,
	title = {The rise of serverless computing},
	volume = {62},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/3368454},
	doi = {10.1145/3368454},
	abstract = {The server is dead, long live the server.},
	language = {en},
	number = {12},
	journal = {Communications of the ACM},
	author = {Castro, Paul and Ishakian, Vatche and Muthusamy, Vinod and Slominski, Aleksander},
	month = nov,
	year = {2019},
	pages = {44--54},
	file = {PDF:/home/nick/Zotero/storage/VE3NEU5H/Castro et al. - 2019 - The rise of serverless computing.pdf:application/pdf},
}

@misc{jonas_cloud_2019,
	title = {Cloud {Programming} {Simplified}: {A} {Berkeley} {View} on {Serverless} {Computing}},
	shorttitle = {Cloud {Programming} {Simplified}},
	url = {http://arxiv.org/abs/1902.03383},
	doi = {10.48550/arXiv.1902.03383},
	abstract = {Serverless cloud computing handles virtually all the system administration operations needed to make it easier for programmers to use the cloud. It provides an interface that greatly simpliﬁes cloud programming, and represents an evolution that parallels the transition from assembly language to high-level programming languages. This paper gives a quick history of cloud computing, including an accounting of the predictions of the 2009 Berkeley View of Cloud Computing paper, explains the motivation for serverless computing, describes applications that stretch the current limits of serverless, and then lists obstacles and research opportunities required for serverless computing to fulﬁll its full potential. Just as the 2009 paper identiﬁed challenges for the cloud and predicted they would be addressed and that cloud use would accelerate, we predict these issues are solvable and that serverless computing will grow to dominate the future of cloud computing.},
	language = {en},
	publisher = {arXiv},
	author = {Jonas, Eric and Schleier-Smith, Johann and Sreekanti, Vikram and Tsai, Chia-Che and Khandelwal, Anurag and Pu, Qifan and Shankar, Vaishaal and Carreira, Joao and Krauth, Karl and Yadwadkar, Neeraja and Gonzalez, Joseph E. and Popa, Raluca Ada and Stoica, Ion and Patterson, David A.},
	month = feb,
	year = {2019},
	note = {arXiv:1902.03383 [cs]},
	keywords = {Computer Science - Operating Systems},
	file = {PDF:/home/nick/Zotero/storage/547PKP3I/Jonas et al. - 2019 - Cloud Programming Simplified A Berkeley View on Serverless Computing.pdf:application/pdf},
}

@misc{copik_rfaas_2023,
	title = {{rFaaS}: {Enabling} {High} {Performance} {Serverless} with {RDMA} and {Leases}},
	shorttitle = {{rFaaS}},
	url = {http://arxiv.org/abs/2106.13859},
	doi = {10.48550/arXiv.2106.13859},
	abstract = {High performance is needed in many computing systems, from batch-managed supercomputers to general-purpose cloud platforms. However, scientiﬁc clusters lack elastic parallelism, while clouds cannot offer competitive costs for highperformance applications. In this work, we investigate how modern cloud programming paradigms can bring the elasticity needed to allocate idle resources, decreasing computation costs and improving overall data center efﬁciency. Function-as-aService (FaaS) brings the pay-as-you-go execution of stateless functions, but its performance characteristics cannot match coarse-grained cloud and cluster allocations. To make serverless computing viable for high-performance and latency-sensitive applications, we present rFaaS, an RDMA-accelerated FaaS platform. We identify critical limitations of serverless - centralized scheduling and inefﬁcient network transport - and improve the FaaS architecture with allocation leases and microsecond invocations. We show that our remote functions add only negligible overhead on top of the fastest available networks, and we decrease the execution latency by orders of magnitude compared to contemporary FaaS systems. Furthermore, we demonstrate the performance of rFaaS by evaluating real-world FaaS benchmarks and parallel applications. Overall, our results show that new allocation policies and remote memory access help FaaS applications achieve high performance and bring serverless computing to HPC.},
	language = {en},
	publisher = {arXiv},
	author = {Copik, Marcin and Taranov, Konstantin and Calotoiu, Alexandru and Hoefler, Torsten},
	month = may,
	year = {2023},
	note = {arXiv:2106.13859 [cs]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	annote = {Comment: Accepted for publication in the 2023 International Parallel and Distributed Processing Symposium (IPDPS)},
	file = {PDF:/home/nick/Zotero/storage/5NL5ZJ2C/Copik et al. - 2023 - rFaaS Enabling High Performance Serverless with RDMA and Leases.pdf:application/pdf},
}

@inproceedings{mcgrath_serverless_2017,
	title = {Serverless {Computing}: {Design}, {Implementation}, and {Performance}},
	shorttitle = {Serverless {Computing}},
	url = {https://ieeexplore.ieee.org/document/7979855},
	doi = {10.1109/ICDCSW.2017.36},
	abstract = {We present the design of a novel performance-oriented serverless computing platform implemented in. NET, deployed in Microsoft Azure, and utilizing Windows containers as function execution environments. Implementation challenges such as function scaling and container discovery, lifecycle, and reuse are discussed in detail. We propose metrics to evaluate the execution performance of serverless platforms and conduct tests on our prototype as well as AWS Lambda, Azure Functions, Google Cloud Functions, and IBM's deployment of Apache OpenWhisk. Our measurements show the prototype achieving greater throughput than other platforms at most concurrency levels, and we examine the scaling and instance expiration trends in the implementations. Additionally, we discuss the gaps and limitations in our current design, propose possible solutions, and highlight future research.},
	booktitle = {2017 {IEEE} 37th {International} {Conference} on {Distributed} {Computing} {Systems} {Workshops} ({ICDCSW})},
	author = {McGrath, Garrett and Brenner, Paul R.},
	month = jun,
	year = {2017},
	note = {ISSN: 2332-5666},
	keywords = {Apache OpenWhisk, AWS Lambda, Azure Functions, Containers, FaaS, Function-as-a-Service, Google, Google Cloud Functions, IBM OpenWhisk, Metadata, Prototypes, Resource management, Runtime, serverless computing, serverless performance, Web services},
	pages = {405--410},
	file = {Full Text PDF:/home/nick/Zotero/storage/CVE36NZ2/McGrath and Brenner - 2017 - Serverless Computing Design, Implementation, and Performance.pdf:application/pdf},
}

@techreport{jones_json_2015,
	type = {Request for {Comments}},
	title = {{JSON} {Web} {Token} ({JWT})},
	url = {https://datatracker.ietf.org/doc/rfc7519},
	abstract = {JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.},
	number = {RFC 7519},
	institution = {Internet Engineering Task Force},
	author = {Jones, Michael B. and Bradley, John and Sakimura, Nat},
	month = may,
	year = {2015},
	doi = {10.17487/RFC7519},
	note = {Num Pages: 30},
	file = {Full Text PDF:/home/nick/Zotero/storage/SYM6IXCN/Jones et al. - 2015 - JSON Web Token (JWT).pdf:application/pdf},
}

@techreport{rescorla_transport_2018,
	type = {Request for {Comments}},
	title = {The {Transport} {Layer} {Security} ({TLS}) {Protocol} {Version} 1.3},
	url = {https://datatracker.ietf.org/doc/rfc8446},
	abstract = {This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery. This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.},
	number = {RFC 8446},
	institution = {Internet Engineering Task Force},
	author = {Rescorla, Eric},
	month = aug,
	year = {2018},
	doi = {10.17487/RFC8446},
	note = {Num Pages: 160},
	file = {Full Text PDF:/home/nick/Zotero/storage/YXMYMUXI/Rescorla - 2018 - The Transport Layer Security (TLS) Protocol Version 1.3.pdf:application/pdf},
}

@techreport{freier_secure_2011,
	type = {Request for {Comments}},
	title = {The {Secure} {Sockets} {Layer} ({SSL}) {Protocol} {Version} 3.0},
	url = {https://datatracker.ietf.org/doc/rfc6101},
	abstract = {This document is published as a historical record of the SSL 3.0 protocol. The original Abstract follows. This document specifies version 3.0 of the Secure Sockets Layer (SSL 3.0) protocol, a security protocol that provides communications privacy over the Internet. The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery. This document defines a Historic Document for the Internet community.},
	number = {RFC 6101},
	institution = {Internet Engineering Task Force},
	author = {Freier, Alan O. and Karlton, Philip and Kocher, Paul C.},
	month = aug,
	year = {2011},
	doi = {10.17487/RFC6101},
	note = {Num Pages: 67},
	file = {Full Text PDF:/home/nick/Zotero/storage/MD7SAX66/Freier et al. - 2011 - The Secure Sockets Layer (SSL) Protocol Version 3.0.pdf:application/pdf},
}

@article{marin_serverless_2022,
	title = {Serverless computing: a security perspective},
	copyright = {© The Author(s) 2022. This work is published under http://creativecommons.org/licenses/by/4.0/ (the “License”). Notwithstanding the ProQuest Terms and Conditions, you may use this content in accordance with the terms of the License.},
	shorttitle = {Serverless computing},
	url = {https://www.proquest.com/docview/2727498922?pq-origsite=primo&sourcetype=Scholarly%20Journals},
	doi = {10.1186/s13677-022-00347-w},
	abstract = {In this article we review the current serverless architectures, abstract and categorize their founding principles, and provide an in-depth security analysis. In particular, we: show the security shortcomings of the analyzed serverless architectural paradigms; point to possible countermeasures; and, highlight several research directions for practitioners, Industry, and Academia.},
	language = {English},
	author = {Marin, Eduard 1 and Perino, Diego 1 and Di Pietro, Roberto 2 1 Telefonica Research and Engineering (CSE), Information and Computing Technology (ICT), Hamad Bin Khalifa University (HBKU)},
	month = dec,
	year = {2022},
	note = {Publisher: Springer Nature B.V.},
	file = {Full Text PDF:/home/nick/Zotero/storage/8DIVV923/Marin et al. - 2022 - Serverless computing a security perspective.pdf:application/pdf},
}

@article{wang_infinicache_nodate,
	title = {{InfiniCache}: {Exploiting} {Ephemeral} {Serverless} {Functions} to {Build} a {Cost}-{Effective} {Memory} {Cache}},
	abstract = {Internet-scale web applications are becoming increasingly storage-intensive and rely heavily on in-memory object caching to attain required I/O performance. We argue that the emerging serverless computing paradigm provides a wellsuited, cost-effective platform for object caching. We present INFINICACHE, a ﬁrst-of-its-kind in-memory object caching system that is completely built and deployed atop ephemeral serverless functions. INFINICACHE exploits and orchestrates serverless functions’ memory resources to enable elastic payper-use caching. INFINICACHE’s design combines erasure coding, intelligent billed duration control, and an efﬁcient data backup mechanism to maximize data availability and cost effectiveness while balancing the risk of losing cached state and performance. We implement INFINICACHE on AWS Lambda and show that it: (1) achieves 31 – 96× tenant-side cost savings compared to AWS ElastiCache for a large-objectonly production workload, (2) can effectively provide 95.4\% data availability for each one hour window, and (3) enables comparative performance seen in a typical in-memory cache.},
	language = {en},
	author = {Wang, Ao and Zhang, Jingyuan and Ma, Xiaolong and Skourtis, Dimitrios and Tarasov, Vasily and Yan, Feng},
	file = {PDF:/home/nick/Zotero/storage/DALA3GF2/Wang et al. - InfiniCache Exploiting Ephemeral Serverless Functions to Build a Cost-Effective Memory Cache.pdf:application/pdf},
}

@article{alcott_jevons_2005,
	title = {Jevons' paradox},
	volume = {54},
	issn = {0921-8009},
	url = {https://www.sciencedirect.com/science/article/pii/S0921800905001084},
	doi = {10.1016/j.ecolecon.2005.03.020},
	abstract = {In The Coal Question William Stanley Jevons [Jevons, W.S., 1865/1965. The Coal Question: an Inquiry Concerning the Progress of the Nation, and the Probable Exhaustion of our Coal-mines. 3rd edition 1905, Ed. A.W. Flux. Augustus M. Kelley, New York.] maintained that technological efficiency gains—specifically the more “economical” use of coal in engines doing mechanical work—actually increased the overall consumption of coal, iron, and other resources, rather than “saving” them, as many claimed. Twentieth-century economic growth theory also sees technological change as the main cause of increased production and consumption. In contrast, some ecologically-oriented economists and practically all governments, green political parties and NGOs believe that efficiency gains lower consumption and negative environmental impact. Others doubt this ‘efficiency strategy’ towards sustainability, holding that efficiency gains ‘rebound’ or even ‘backfire’ in pursuing this goal, causing higher production and consumption. Because many environmental problems demand rapid and clear policy recommendations, this issue deserves high priority in ecological economics. If Jevons is right, efficiency policies are counter-productive, and business-as-usual efficiency gains must be compensated for with physical caps like quotas or rationing.},
	number = {1},
	journal = {Ecological Economics},
	author = {Alcott, Blake},
	month = jul,
	year = {2005},
	keywords = {Consumption, Growth, Impact, Jevons, Rebound, Technological efficiency},
	pages = {9--21},
	file = {ScienceDirect Snapshot:/home/nick/Zotero/storage/4FJQCAT3/S0921800905001084.html:text/html},
}

@misc{spillner_quantitative_2019,
	title = {Quantitative {Analysis} of {Cloud} {Function} {Evolution} in the {AWS} {Serverless} {Application} {Repository}},
	url = {http://arxiv.org/abs/1905.04800},
	doi = {10.48550/arXiv.1905.04800},
	abstract = {The serverless computing ecosystem is growing due to interest by software engineers. Beside Function-as-a-Service (FaaS) and Backend-as-aService (BaaS) systems, developer-oriented tools such as deployment and debugging frameworks as well as cloud function repositories enable the rapid creation of wholly or partially serverless applications. This study presents ﬁrst insights into how cloud functions (Lambda functions) and composite serverless applications oﬀered through the AWS Serverless Application Repository have evolved over the course of one year. Speciﬁcally, it outlines information on cloud function and function-based application oﬀering models and descriptions, high-level implementation statistics, and evolution including change patterns over time. Several results are presented in live paper style, oﬀering hyperlinks to continuously updated ﬁgures to follow the evolution after publication date.},
	language = {en},
	publisher = {arXiv},
	author = {Spillner, Josef},
	month = may,
	year = {2019},
	note = {arXiv:1905.04800 [cs]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	annote = {Comment: 26 pages, 13 figures, 4 tables, live updates, unreviewed},
	file = {PDF:/home/nick/Zotero/storage/2X7JADSJ/Spillner - 2019 - Quantitative Analysis of Cloud Function Evolution in the AWS Serverless Application Repository.pdf:application/pdf},
}
